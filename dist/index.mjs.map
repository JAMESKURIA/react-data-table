{"version":3,"sources":["../src/components/ui/alert.tsx","../src/lib/utils.ts","../src/components/ui/button.tsx","../src/components/ui/table.tsx","../src/components/data-table/DataTable.tsx","../src/components/data-table/components/DataTableEmpty.tsx","../src/components/ui/card.tsx","../src/components/data-table/components/DataTableMobile.tsx","../src/components/ui/select.tsx","../src/components/data-table/components/DataTablePagination.tsx","../src/components/ui/skeleton.tsx","../src/components/data-table/components/DataTableSkeleton.tsx","../src/components/ui/dropdown-menu.tsx","../src/components/ui/input.tsx","../src/components/data-table/components/DataTableToolbar.tsx","../src/components/data-table/hooks/useDataTable.ts","../src/components/data-table/utils/exportUtils.ts","../src/components/ui/badge.tsx","../src/components/ui/checkbox.tsx","../src/components/data-table/utils/columnHelpers.tsx","../src/components/data-table/utils/presets.ts"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n","import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n","// src/components/ui/button.tsx\nimport { cn } from \"@/lib/utils\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst buttonVariants = cva(\n\t\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault:\n\t\t\t\t\t\"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n\t\t\t\tdestructive:\n\t\t\t\t\t\"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n\t\t\t\toutline:\n\t\t\t\t\t\"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n\t\t\t\tsecondary:\n\t\t\t\t\t\"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n\t\t\t\tghost: \"hover:bg-accent hover:text-accent-foreground\",\n\t\t\t\tlink: \"text-primary underline-offset-4 hover:underline\",\n\t\t\t\tsuccess: \"bg-green-600 text-white hover:bg-green-700\",\n\t\t\t\twarning: \"bg-yellow-600 text-white hover:bg-yellow-700\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: \"h-9 px-4 py-2\",\n\t\t\t\tsm: \"h-8 rounded-md px-3 text-xs\",\n\t\t\t\tlg: \"h-10 rounded-md px-8\",\n\t\t\t\ticon: \"h-9 w-9\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tsize: \"default\",\n\t\t},\n\t}\n);\n\nexport interface ButtonProps\n\textends React.ButtonHTMLAttributes<HTMLButtonElement>,\n\t\tVariantProps<typeof buttonVariants> {\n\tasChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t({ className, variant, size, asChild = false, ...props }, ref) => {\n\t\tconst Comp = asChild ? Slot : \"button\";\n\t\treturn (\n\t\t\t<Comp\n\t\t\t\tclassName={cn(buttonVariants({ variant, size, className }))}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t);\n\t}\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","// src/components/data-table/DataTable.tsx\n\"use client\";\n\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableHead,\n\tTableHeader,\n\tTableRow,\n} from \"@/components/ui/table\";\nimport { cn } from \"@/lib/utils\";\nimport { ColumnDef, flexRender } from \"@tanstack/react-table\";\nimport { AlertCircle } from \"lucide-react\";\nimport * as React from \"react\";\nimport { DataTableEmpty } from \"./components/DataTableEmpty\";\nimport { DataTableMobile } from \"./components/DataTableMobile\";\nimport { DataTablePagination } from \"./components/DataTablePagination\";\nimport { DataTableSkeleton } from \"./components/DataTableSkeleton\";\nimport { DataTableToolbar } from \"./components/DataTableToolbar\";\nimport { useDataTable } from \"./hooks/useDataTable\";\nimport { ColumnConfig, DataTableProps } from \"./types\";\nimport { createColumns } from \"./utils/columnHelpers\";\nimport { mergeFeatures } from \"./utils/presets\";\n\n// Helper to check if columns are ColumnConfig or ColumnDef\nfunction isColumnConfig<TData>(\n\tcolumns: ColumnDef<TData, any>[] | ColumnConfig<TData>[]\n): columns is ColumnConfig<TData>[] {\n\treturn columns.length > 0 && \"key\" in columns[0];\n}\n\nexport function DataTable<TData, TValue = any>({\n\tcolumns: rawColumns,\n\tdata,\n\tpreset,\n\tfeatures: customFeatures,\n\tloading = false,\n\terror = null,\n\tonRetry,\n\tclassName,\n\tcontainerClassName,\n\tresponsive = true,\n\tskeleton,\n\temptyState,\n\trenderToolbar,\n\trenderPagination,\n\trenderEmpty,\n\trenderError,\n\tonStateChange,\n\tonRowClick,\n\tonRowDoubleClick,\n\tmanualPagination = false,\n\tmanualSorting = false,\n\tmanualFiltering = false,\n\tpageCount,\n\trowCount,\n}: DataTableProps<TData, TValue>) {\n\t// Convert columns if needed\n\tconst columns = React.useMemo((): ColumnDef<TData, any>[] => {\n\t\tif (isColumnConfig(rawColumns as any)) {\n\t\t\treturn createColumns(\n\t\t\t\trawColumns as ColumnConfig<TData>[]\n\t\t\t) as ColumnDef<TData, any>[];\n\t\t}\n\t\treturn rawColumns as ColumnDef<TData, any>[];\n\t}, [rawColumns]);\n\n\t// Merge features with preset\n\tconst features = React.useMemo(\n\t\t() => mergeFeatures(preset, customFeatures),\n\t\t[preset, customFeatures]\n\t);\n\n\t// Use the data table hook\n\tconst tableData = useDataTable({\n\t\tdata,\n\t\tcolumns,\n\t\tfeatures,\n\t\tmanualPagination,\n\t\tmanualSorting,\n\t\tmanualFiltering,\n\t\tpageCount,\n\t\trowCount,\n\t\tonStateChange,\n\t});\n\n\tconst { table, state, actions } = tableData;\n\n\t// Check if we should show mobile view\n\tconst [isMobile, setIsMobile] = React.useState(false);\n\n\tReact.useEffect(() => {\n\t\tconst checkMobile = () => {\n\t\t\tconst breakpoint =\n\t\t\t\ttypeof responsive === \"object\" && responsive.breakpoint\n\t\t\t\t\t? responsive.breakpoint\n\t\t\t\t\t: 768;\n\t\t\tsetIsMobile(window.innerWidth < breakpoint);\n\t\t};\n\n\t\tcheckMobile();\n\t\twindow.addEventListener(\"resize\", checkMobile);\n\t\treturn () => window.removeEventListener(\"resize\", checkMobile);\n\t}, [responsive]);\n\n\t// Loading state\n\tif (loading) {\n\t\tconst skeletonConfig = typeof skeleton === \"object\" ? skeleton : {};\n\t\treturn (\n\t\t\t<div className={containerClassName}>\n\t\t\t\t<DataTableSkeleton\n\t\t\t\t\tcolumns={columns.length}\n\t\t\t\t\trows={skeletonConfig.rows || 5}\n\t\t\t\t\tshowHeaders={skeletonConfig.showHeaders !== false}\n\t\t\t\t\tanimate={skeletonConfig.animate !== false}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Error state\n\tif (error) {\n\t\tif (renderError) {\n\t\t\treturn <>{renderError(error, onRetry || (() => {}))}</>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={containerClassName}>\n\t\t\t\t<Alert variant=\"destructive\">\n\t\t\t\t\t<AlertCircle className=\"h-4 w-4\" />\n\t\t\t\t\t<AlertTitle>Error</AlertTitle>\n\t\t\t\t\t<AlertDescription className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{error.message ||\n\t\t\t\t\t\t\t\t\"An error occurred while loading the data.\"}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{onRetry && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tonClick={onRetry}\n\t\t\t\t\t\t\t\tclassName=\"ml-4\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRetry\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</AlertDescription>\n\t\t\t\t</Alert>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Mobile view\n\tif (isMobile && responsive) {\n\t\treturn (\n\t\t\t<div className={containerClassName}>\n\t\t\t\t<DataTableMobile\n\t\t\t\t\ttable={table}\n\t\t\t\t\tcolumns={columns as ColumnDef<TData>[]}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tfeatures={features}\n\t\t\t\t\tconfig={typeof responsive === \"object\" ? responsive : {}}\n\t\t\t\t\tonRowClick={onRowClick}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Empty state\n\tconst isEmpty = table.getRowModel().rows.length === 0;\n\n\treturn (\n\t\t<div className={cn(\"space-y-4\", containerClassName)}>\n\t\t\t{/* Toolbar */}\n\t\t\t{features.search ||\n\t\t\tfeatures.filters ||\n\t\t\tfeatures.columnVisibility ||\n\t\t\tfeatures.export ? (\n\t\t\t\trenderToolbar ? (\n\t\t\t\t\trenderToolbar(table)\n\t\t\t\t) : (\n\t\t\t\t\t<DataTableToolbar\n\t\t\t\t\t\ttable={table}\n\t\t\t\t\t\tfeatures={features}\n\t\t\t\t\t\tglobalFilter={state.globalFilter}\n\t\t\t\t\t\tonGlobalFilterChange={actions.setGlobalFilter}\n\t\t\t\t\t\tonExport={tableData.exportData}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t) : null}\n\n\t\t\t{/* Table */}\n\t\t\t<div className=\"rounded-md border\">\n\t\t\t\t<Table className={className}>\n\t\t\t\t\t<TableHeader>\n\t\t\t\t\t\t{table.getHeaderGroups().map((headerGroup: any) => (\n\t\t\t\t\t\t\t<TableRow key={headerGroup.id}>\n\t\t\t\t\t\t\t\t{headerGroup.headers.map((header: any) => {\n\t\t\t\t\t\t\t\t\tconst meta = header.column.columnDef\n\t\t\t\t\t\t\t\t\t\t.meta as any;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TableHead\n\t\t\t\t\t\t\t\t\t\t\tkey={header.id}\n\t\t\t\t\t\t\t\t\t\t\tcolSpan={header.colSpan}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: meta?.width,\n\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: meta?.align,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{header.isPlaceholder\n\t\t\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t\t\t: flexRender(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.header,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader.getContext()\n\t\t\t\t\t\t\t\t\t\t\t\t  )}\n\t\t\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableHeader>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{isEmpty ? (\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\tcolSpan={columns.length}\n\t\t\t\t\t\t\t\t\tclassName=\"h-24 text-center\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{renderEmpty ? (\n\t\t\t\t\t\t\t\t\t\trenderEmpty()\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<DataTableEmpty config={emptyState} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\ttable.getRowModel().rows.map((row: any) => (\n\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\tkey={row.id}\n\t\t\t\t\t\t\t\t\tdata-state={\n\t\t\t\t\t\t\t\t\t\trow.getIsSelected() && \"selected\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={() => onRowClick?.(row.original)}\n\t\t\t\t\t\t\t\t\tonDoubleClick={() =>\n\t\t\t\t\t\t\t\t\t\tonRowDoubleClick?.(row.original)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\tonRowClick &&\n\t\t\t\t\t\t\t\t\t\t\t\"cursor-pointer hover:bg-muted/50\",\n\t\t\t\t\t\t\t\t\t\trow.getIsSelected() && \"bg-muted\"\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell: any) => {\n\t\t\t\t\t\t\t\t\t\tconst meta = cell.column.columnDef\n\t\t\t\t\t\t\t\t\t\t\t.meta as any;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\t\t\tkey={cell.id}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: meta?.align,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{flexRender(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcell.column.columnDef.cell,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcell.getContext()\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\n\t\t\t{/* Pagination */}\n\t\t\t{features.pagination && !isEmpty ? (\n\t\t\t\trenderPagination ? (\n\t\t\t\t\trenderPagination({\n\t\t\t\t\t\tpageIndex: state.pagination.pageIndex,\n\t\t\t\t\t\tpageSize: state.pagination.pageSize,\n\t\t\t\t\t\tpageCount: tableData.pageCount,\n\t\t\t\t\t\tcanPreviousPage: table.getCanPreviousPage(),\n\t\t\t\t\t\tcanNextPage: table.getCanNextPage(),\n\t\t\t\t\t\tpreviousPage: () => table.previousPage(),\n\t\t\t\t\t\tnextPage: () => table.nextPage(),\n\t\t\t\t\t\tsetPageIndex: actions.setPage,\n\t\t\t\t\t\tsetPageSize: actions.setPageSize,\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t<DataTablePagination\n\t\t\t\t\t\ttable={table}\n\t\t\t\t\t\tfeatures={features}\n\t\t\t\t\t\tpageSizes={\n\t\t\t\t\t\t\ttypeof features.pagination === \"object\"\n\t\t\t\t\t\t\t\t? features.pagination.pageSizes\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","// src/components/data-table/components/DataTableEmpty.tsx\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { FileX2, LucideIcon } from \"lucide-react\";\nimport * as React from \"react\";\n\ninterface DataTableEmptyProps {\n\tconfig?:\n\t\t| React.ReactNode\n\t\t| {\n\t\t\t\ticon?: LucideIcon;\n\t\t\t\ttitle?: string;\n\t\t\t\tdescription?: string;\n\t\t\t\taction?: {\n\t\t\t\t\tlabel: string;\n\t\t\t\t\tonClick: () => void;\n\t\t\t\t\tvariant?:\n\t\t\t\t\t\t| \"default\"\n\t\t\t\t\t\t| \"outline\"\n\t\t\t\t\t\t| \"secondary\"\n\t\t\t\t\t\t| \"ghost\"\n\t\t\t\t\t\t| \"link\"\n\t\t\t\t\t\t| \"destructive\";\n\t\t\t\t};\n\t\t\t\tclassName?: string;\n\t\t  };\n}\n\nexport function DataTableEmpty({ config }: DataTableEmptyProps) {\n\t// If config is a React element, render it directly\n\tif (React.isValidElement(config)) {\n\t\treturn <>{config}</>;\n\t}\n\n\t// Otherwise, use the configuration object\n\tconst emptyConfig =\n\t\ttypeof config === \"object\" && config !== null ? config : {};\n\tconst Icon = emptyConfig.icon || FileX2;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cn(\n\t\t\t\t\"flex flex-col items-center justify-center py-10\",\n\t\t\t\temptyConfig.className\n\t\t\t)}\n\t\t>\n\t\t\t<Icon className=\"h-10 w-10 text-muted-foreground mb-4\" />\n\t\t\t<h3 className=\"text-lg font-semibold\">\n\t\t\t\t{emptyConfig.title || \"No results found\"}\n\t\t\t</h3>\n\t\t\t<p className=\"text-sm text-muted-foreground mb-4 text-center max-w-sm\">\n\t\t\t\t{emptyConfig.description ||\n\t\t\t\t\t\"Try adjusting your search or filter to find what you're looking for.\"}\n\t\t\t</p>\n\t\t\t{emptyConfig.action && (\n\t\t\t\t<Button\n\t\t\t\t\tvariant={emptyConfig.action.variant || \"outline\"}\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={emptyConfig.action.onClick}\n\t\t\t\t>\n\t\t\t\t\t{emptyConfig.action.label}\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n","// src/components/data-table/components/DataTableMobile.tsx\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\nimport { ColumnDef, flexRender, Table } from \"@tanstack/react-table\";\nimport { ChevronDown, ChevronRight } from \"lucide-react\";\nimport * as React from \"react\";\nimport { MobileConfig, TableFeatures } from \"../types\";\n\ninterface DataTableMobileProps<TData> {\n\ttable: Table<TData>;\n\tcolumns: ColumnDef<TData, any>[];\n\tdata: TData[];\n\tfeatures: TableFeatures;\n\tconfig: MobileConfig;\n\tonRowClick?: (row: TData) => void;\n}\n\nexport function DataTableMobile<TData>({\n\ttable,\n\tcolumns,\n\tdata,\n\tfeatures,\n\tconfig,\n\tonRowClick,\n}: DataTableMobileProps<TData>) {\n\tconst [expandedRows, setExpandedRows] = React.useState<Set<string>>(\n\t\tnew Set()\n\t);\n\n\tconst view = config.view || \"cards\";\n\tconst mobileColumns = config.columns || [];\n\n\t// Filter columns for mobile view\n\tconst visibleColumns =\n\t\tmobileColumns.length > 0\n\t\t\t? columns.filter(\n\t\t\t\t\t(col) =>\n\t\t\t\t\t\tcol.id &&\n\t\t\t\t\t\t(mobileColumns.includes(col.id) ||\n\t\t\t\t\t\t\tcol.id === \"select\" ||\n\t\t\t\t\t\t\tcol.id === \"actions\")\n\t\t\t  )\n\t\t\t: columns.slice(0, 3); // Show first 3 columns by default\n\n\tconst hiddenColumns = columns.filter(\n\t\t(col) => !visibleColumns.includes(col)\n\t);\n\n\tconst toggleRow = (rowId: string) => {\n\t\tsetExpandedRows((prev) => {\n\t\t\tconst next = new Set(prev);\n\t\t\tif (next.has(rowId)) {\n\t\t\t\tnext.delete(rowId);\n\t\t\t} else {\n\t\t\t\tnext.add(rowId);\n\t\t\t}\n\t\t\treturn next;\n\t\t});\n\t};\n\n\tif (view === \"cards\") {\n\t\treturn (\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t{table.getRowModel().rows.map((row) => {\n\t\t\t\t\tconst isExpanded = expandedRows.has(row.id);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tkey={row.id}\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\"transition-colors\",\n\t\t\t\t\t\t\t\tonRowClick &&\n\t\t\t\t\t\t\t\t\t\"cursor-pointer hover:bg-muted/50\",\n\t\t\t\t\t\t\t\trow.getIsSelected() && \"border-primary\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tonClick={() => onRowClick?.(row.original)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CardHeader className=\"pb-3\">\n\t\t\t\t\t\t\t\t<div className=\"flex items-start justify-between\">\n\t\t\t\t\t\t\t\t\t<div className=\"space-y-1 flex-1\">\n\t\t\t\t\t\t\t\t\t\t{visibleColumns.map((column) => {\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn.id === \"select\" ||\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn.id === \"actions\"\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t\t\t\t\tconst cell = row\n\t\t\t\t\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tc.column.id ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn.id\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tif (!cell) return null;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={column.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex items-center space-x-2\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{typeof column.header ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? column.header\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: column.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{flexRender(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.column\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.columnDef.cell,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.getContext()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t\t\t\t{/* Select checkbox */}\n\t\t\t\t\t\t\t\t\t\t{features.selection && (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{row\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc.column.id ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"select\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tflexRender(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc.id ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"select\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)?.cell,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ row }\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{/* Actions */}\n\t\t\t\t\t\t\t\t\t\t{row\n\t\t\t\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t\t\t\t\t(c) => c.column.id === \"actions\"\n\t\t\t\t\t\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{flexRender(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc.id === \"actions\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t)?.cell,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ row }\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{/* Expand button */}\n\t\t\t\t\t\t\t\t\t\t{config.collapsible !== false &&\n\t\t\t\t\t\t\t\t\t\t\thiddenColumns.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"h-8 w-8 p-0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleRow(row.id);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isExpanded ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ChevronDown className=\"h-4 w-4\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ChevronRight className=\"h-4 w-4\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardHeader>\n\n\t\t\t\t\t\t\t{isExpanded && hiddenColumns.length > 0 && (\n\t\t\t\t\t\t\t\t<CardContent className=\"pt-0\">\n\t\t\t\t\t\t\t\t\t<div className=\"space-y-2 border-t pt-3\">\n\t\t\t\t\t\t\t\t\t\t{hiddenColumns.map((column) => {\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn.id === \"select\" ||\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn.id === \"actions\"\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t\t\t\t\tconst cell = row\n\t\t\t\t\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tc.column.id ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn.id\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tif (!cell) return null;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={column.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex justify-between text-sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-medium text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{typeof column.header ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? column.header\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: column.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{flexRender(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.column\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.columnDef.cell,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.getContext()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t\t{/* Mobile Pagination */}\n\t\t\t\t{features.pagination && (\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tonClick={() => table.previousPage()}\n\t\t\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPrevious\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<span className=\"text-sm text-muted-foreground\">\n\t\t\t\t\t\t\tPage {table.getState().pagination.pageIndex + 1} of{\" \"}\n\t\t\t\t\t\t\t{table.getPageCount()}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tonClick={() => table.nextPage()}\n\t\t\t\t\t\t\tdisabled={!table.getCanNextPage()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// List view\n\tif (view === \"list\") {\n\t\treturn (\n\t\t\t<div className=\"space-y-2\">\n\t\t\t\t{table.getRowModel().rows.map((row) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={row.id}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\"flex items-center justify-between p-4 border rounded-lg transition-colors\",\n\t\t\t\t\t\t\tonRowClick && \"cursor-pointer hover:bg-muted/50\",\n\t\t\t\t\t\t\trow.getIsSelected() && \"border-primary\"\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonClick={() => onRowClick?.(row.original)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"flex-1 space-y-1\">\n\t\t\t\t\t\t\t{visibleColumns.map((column) => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tcolumn.id === \"select\" ||\n\t\t\t\t\t\t\t\t\tcolumn.id === \"actions\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t\tconst cell = row\n\t\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t\t.find((c) => c.column.id === column.id);\n\t\t\t\t\t\t\t\tif (!cell) return null;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div key={column.id} className=\"text-sm\">\n\t\t\t\t\t\t\t\t\t\t{flexRender(\n\t\t\t\t\t\t\t\t\t\t\tcell.column.columnDef.cell,\n\t\t\t\t\t\t\t\t\t\t\tcell.getContext()\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t{features.selection && (\n\t\t\t\t\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\n\t\t\t\t\t\t\t\t\t{row\n\t\t\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t\t\t\t(c) => c.column.id === \"select\"\n\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\tflexRender(\n\t\t\t\t\t\t\t\t\t\t\tcolumns.find(\n\t\t\t\t\t\t\t\t\t\t\t\t(c) => c.id === \"select\"\n\t\t\t\t\t\t\t\t\t\t\t)?.cell,\n\t\t\t\t\t\t\t\t\t\t\t{ row }\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{row\n\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t.find((c) => c.column.id === \"actions\") && (\n\t\t\t\t\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\n\t\t\t\t\t\t\t\t\t{flexRender(\n\t\t\t\t\t\t\t\t\t\tcolumns.find((c) => c.id === \"actions\")\n\t\t\t\t\t\t\t\t\t\t\t?.cell,\n\t\t\t\t\t\t\t\t\t\t{ row }\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Stacked view (default)\n\treturn (\n\t\t<div className=\"space-y-4\">\n\t\t\t{table.getRowModel().rows.map((row) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={row.id}\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\"space-y-3 p-4 border rounded-lg\",\n\t\t\t\t\t\tonRowClick && \"cursor-pointer hover:bg-muted/50\",\n\t\t\t\t\t\trow.getIsSelected() && \"border-primary\"\n\t\t\t\t\t)}\n\t\t\t\t\tonClick={() => onRowClick?.(row.original)}\n\t\t\t\t>\n\t\t\t\t\t{columns.map((column) => {\n\t\t\t\t\t\tif (column.id === \"select\" || column.id === \"actions\")\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\tconst cell = row\n\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t.find((c) => c.column.id === column.id);\n\t\t\t\t\t\tif (!cell) return null;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={column.id}\n\t\t\t\t\t\t\t\tclassName=\"flex flex-col space-y-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className=\"text-xs font-medium text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t{typeof column.header === \"string\"\n\t\t\t\t\t\t\t\t\t\t? column.header\n\t\t\t\t\t\t\t\t\t\t: column.id}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"text-sm\">\n\t\t\t\t\t\t\t\t\t{flexRender(\n\t\t\t\t\t\t\t\t\t\tcell.column.columnDef.cell,\n\t\t\t\t\t\t\t\t\t\tcell.getContext()\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\n\t\t\t\t\t{(features.selection ||\n\t\t\t\t\t\trow\n\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t.find((c) => c.column.id === \"actions\")) && (\n\t\t\t\t\t\t<div className=\"flex items-center justify-end space-x-2 pt-2 border-t\">\n\t\t\t\t\t\t\t{features.selection && (\n\t\t\t\t\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\n\t\t\t\t\t\t\t\t\t{row\n\t\t\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t\t\t\t(c) => c.column.id === \"select\"\n\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\tflexRender(\n\t\t\t\t\t\t\t\t\t\t\tcolumns.find(\n\t\t\t\t\t\t\t\t\t\t\t\t(c) => c.id === \"select\"\n\t\t\t\t\t\t\t\t\t\t\t)?.cell,\n\t\t\t\t\t\t\t\t\t\t\t{ row }\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{row\n\t\t\t\t\t\t\t\t.getAllCells()\n\t\t\t\t\t\t\t\t.find((c) => c.column.id === \"actions\") && (\n\t\t\t\t\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\n\t\t\t\t\t\t\t\t\t{flexRender(\n\t\t\t\t\t\t\t\t\t\tcolumns.find((c) => c.id === \"actions\")\n\t\t\t\t\t\t\t\t\t\t\t?.cell,\n\t\t\t\t\t\t\t\t\t\t{ row }\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","// src/components/ui/select.tsx\n\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport {\n\tCheckIcon,\n\tChevronDownIcon,\n\tChevronUpIcon,\n} from \"@radix-ui/react-icons\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport * as React from \"react\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Trigger>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n\t<SelectPrimitive.Trigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<SelectPrimitive.Icon asChild>\n\t\t\t<ChevronDownIcon className=\"h-4 w-4 opacity-50\" />\n\t\t</SelectPrimitive.Icon>\n\t</SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n\t<SelectPrimitive.ScrollUpButton\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex cursor-default items-center justify-center py-1\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<ChevronUpIcon />\n\t</SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n\t<SelectPrimitive.ScrollDownButton\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex cursor-default items-center justify-center py-1\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<ChevronDownIcon />\n\t</SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n\tSelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n\t<SelectPrimitive.Portal>\n\t\t<SelectPrimitive.Content\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t\"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n\t\t\t\tposition === \"popper\" &&\n\t\t\t\t\t\"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tposition={position}\n\t\t\t{...props}\n\t\t>\n\t\t\t<SelectScrollUpButton />\n\t\t\t<SelectPrimitive.Viewport\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"p-1\",\n\t\t\t\t\tposition === \"popper\" &&\n\t\t\t\t\t\t\"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</SelectPrimitive.Viewport>\n\t\t\t<SelectScrollDownButton />\n\t\t</SelectPrimitive.Content>\n\t</SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Label>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n\t<SelectPrimitive.Label\n\t\tref={ref}\n\t\tclassName={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n\t\t{...props}\n\t/>\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Item>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n\t<SelectPrimitive.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n\t\t\t<SelectPrimitive.ItemIndicator>\n\t\t\t\t<CheckIcon className=\"h-4 w-4\" />\n\t\t\t</SelectPrimitive.ItemIndicator>\n\t\t</span>\n\t\t<SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n\t</SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Separator>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n\t<SelectPrimitive.Separator\n\t\tref={ref}\n\t\tclassName={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n\t\t{...props}\n\t/>\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n\tSelect,\n\tSelectContent,\n\tSelectGroup,\n\tSelectItem,\n\tSelectLabel,\n\tSelectScrollDownButton,\n\tSelectScrollUpButton,\n\tSelectSeparator,\n\tSelectTrigger,\n\tSelectValue,\n};\n","// src/components/data-table/components/DataTablePagination.tsx\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n\tSelect,\n\tSelectContent,\n\tSelectItem,\n\tSelectTrigger,\n\tSelectValue,\n} from \"@/components/ui/select\";\nimport { cn } from \"@/lib/utils\";\nimport { Table } from \"@tanstack/react-table\";\nimport {\n\tChevronLeft,\n\tChevronRight,\n\tChevronsLeft,\n\tChevronsRight,\n} from \"lucide-react\";\nimport { TableFeatures } from \"../types\";\n\ninterface DataTablePaginationProps<TData> {\n\ttable: Table<TData>;\n\tfeatures: TableFeatures;\n\tpageSizes?: number[];\n\tclassName?: string;\n}\n\nexport function DataTablePagination<TData>({\n\ttable,\n\tfeatures,\n\tpageSizes = [10, 20, 30, 40, 50],\n\tclassName,\n}: DataTablePaginationProps<TData>) {\n\tconst paginationConfig =\n\t\ttypeof features.pagination === \"object\" ? features.pagination : {};\n\n\tconst showInfo = paginationConfig.showInfo !== false;\n\tconst availablePageSizes = paginationConfig.pageSizes || pageSizes;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cn(\"flex items-center justify-between px-2\", className)}\n\t\t>\n\t\t\t{showInfo && (\n\t\t\t\t<div className=\"flex-1 text-sm text-muted-foreground\">\n\t\t\t\t\t{table.getFilteredSelectedRowModel().rows.length > 0 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n\t\t\t\t\t\t\t{table.getFilteredRowModel().rows.length} row(s)\n\t\t\t\t\t\t\tselected.\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className=\"flex items-center space-x-6 lg:space-x-8\">\n\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t<p className=\"text-sm font-medium\">Rows per page</p>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={`${table.getState().pagination.pageSize}`}\n\t\t\t\t\t\tonValueChange={(value) => {\n\t\t\t\t\t\t\ttable.setPageSize(Number(value));\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SelectTrigger className=\"h-8 w-[70px]\">\n\t\t\t\t\t\t\t<SelectValue\n\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\ttable.getState().pagination.pageSize\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</SelectTrigger>\n\t\t\t\t\t\t<SelectContent side=\"top\">\n\t\t\t\t\t\t\t{availablePageSizes.map((pageSize) => (\n\t\t\t\t\t\t\t\t<SelectItem\n\t\t\t\t\t\t\t\t\tkey={pageSize}\n\t\t\t\t\t\t\t\t\tvalue={`${pageSize}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{pageSize}\n\t\t\t\t\t\t\t\t</SelectItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</SelectContent>\n\t\t\t\t\t</Select>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex w-[100px] items-center justify-center text-sm font-medium\">\n\t\t\t\t\tPage {table.getState().pagination.pageIndex + 1} of{\" \"}\n\t\t\t\t\t{table.getPageCount() || 1}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"hidden h-8 w-8 p-0 lg:flex\"\n\t\t\t\t\t\tonClick={() => table.setPageIndex(0)}\n\t\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"sr-only\">Go to first page</span>\n\t\t\t\t\t\t<ChevronsLeft className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"h-8 w-8 p-0\"\n\t\t\t\t\t\tonClick={() => table.previousPage()}\n\t\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"sr-only\">Go to previous page</span>\n\t\t\t\t\t\t<ChevronLeft className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"h-8 w-8 p-0\"\n\t\t\t\t\t\tonClick={() => table.nextPage()}\n\t\t\t\t\t\tdisabled={!table.getCanNextPage()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"sr-only\">Go to next page</span>\n\t\t\t\t\t\t<ChevronRight className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"hidden h-8 w-8 p-0 lg:flex\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\ttable.setPageIndex(table.getPageCount() - 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdisabled={!table.getCanNextPage()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"sr-only\">Go to last page</span>\n\t\t\t\t\t\t<ChevronsRight className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","// src/components/data-table/components/DataTableSkeleton.tsx\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableHead,\n\tTableHeader,\n\tTableRow,\n} from \"@/components/ui/table\";\nimport { cn } from \"@/lib/utils\";\n\ninterface DataTableSkeletonProps {\n\tcolumns?: number;\n\trows?: number;\n\tshowHeaders?: boolean;\n\tanimate?: boolean;\n\tclassName?: string;\n\tcellClassName?: string;\n\theaderClassName?: string;\n}\n\nexport function DataTableSkeleton({\n\tcolumns = 5,\n\trows = 5,\n\tshowHeaders = true,\n\tanimate = true,\n\tclassName,\n\tcellClassName,\n\theaderClassName,\n}: DataTableSkeletonProps) {\n\treturn (\n\t\t<div className={cn(\"rounded-md border\", className)}>\n\t\t\t<Table>\n\t\t\t\t{showHeaders && (\n\t\t\t\t\t<TableHeader>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t{Array.from({ length: columns }).map((_, i) => (\n\t\t\t\t\t\t\t\t<TableHead key={i} className={headerClassName}>\n\t\t\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\"h-6 w-20\",\n\t\t\t\t\t\t\t\t\t\t\tanimate && \"animate-pulse\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHeader>\n\t\t\t\t)}\n\t\t\t\t<TableBody>\n\t\t\t\t\t{Array.from({ length: rows }).map((_, i) => (\n\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t{Array.from({ length: columns }).map((_, j) => (\n\t\t\t\t\t\t\t\t<TableCell key={j} className={cellClassName}>\n\t\t\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\"h-6\",\n\t\t\t\t\t\t\t\t\t\t\tj === 0 ? \"w-32\" : \"w-full\", // First column slightly narrower\n\t\t\t\t\t\t\t\t\t\t\tanimate && \"animate-pulse\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</div>\n\t);\n}\n\n// Alternative skeleton with more customization\nexport function DataTableSkeletonCard({\n\trows = 3,\n\tanimate = true,\n\tclassName,\n}: {\n\trows?: number;\n\tanimate?: boolean;\n\tclassName?: string;\n}) {\n\treturn (\n\t\t<div className={cn(\"space-y-4\", className)}>\n\t\t\t{Array.from({ length: rows }).map((_, i) => (\n\t\t\t\t<div key={i} className=\"rounded-lg border p-4 space-y-3\">\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\"h-5 w-32\",\n\t\t\t\t\t\t\t\tanimate && \"animate-pulse\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\"h-8 w-8 rounded\",\n\t\t\t\t\t\t\t\tanimate && \"animate-pulse\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\"h-4 w-full\",\n\t\t\t\t\t\t\t\tanimate && \"animate-pulse\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\"h-4 w-3/4\",\n\t\t\t\t\t\t\t\tanimate && \"animate-pulse\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\n// Skeleton specifically for mobile list view\nexport function DataTableSkeletonList({\n\trows = 5,\n\tanimate = true,\n\tclassName,\n}: {\n\trows?: number;\n\tanimate?: boolean;\n\tclassName?: string;\n}) {\n\treturn (\n\t\t<div className={cn(\"space-y-2\", className)}>\n\t\t\t{Array.from({ length: rows }).map((_, i) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName=\"flex items-center justify-between p-4 border rounded-lg\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flex-1 space-y-2\">\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\"h-4 w-24\",\n\t\t\t\t\t\t\t\tanimate && \"animate-pulse\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\"h-3 w-32\",\n\t\t\t\t\t\t\t\tanimate && \"animate-pulse\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\tclassName={cn(\"h-8 w-16\", animate && \"animate-pulse\")}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  )\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  )\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean\n  variant?: \"default\" | \"destructive\"\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n}\n","// src/components/ui/input.tsx\nimport { cn } from \"@/lib/utils\";\nimport * as React from \"react\";\n\nexport interface InputProps\n\textends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n\t({ className, type, ...props }, ref) => {\n\t\treturn (\n\t\t\t<input\n\t\t\t\ttype={type}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t);\n\t}\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","// src/components/data-table/components/DataTableToolbar.tsx\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n\tDropdownMenu,\n\tDropdownMenuCheckboxItem,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuLabel,\n\tDropdownMenuSeparator,\n\tDropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport { Table } from \"@tanstack/react-table\";\nimport { Columns, Download, RefreshCw, Search, X } from \"lucide-react\";\nimport * as React from \"react\";\nimport { TableFeatures } from \"../types\";\n\ninterface DataTableToolbarProps<TData> {\n\ttable: Table<TData>;\n\tfeatures: TableFeatures;\n\tglobalFilter: string;\n\tonGlobalFilterChange: (value: string) => void;\n\tonExport?: (format: \"csv\" | \"excel\" | \"pdf\") => void;\n}\n\nexport function DataTableToolbar<TData>({\n\ttable,\n\tfeatures,\n\tglobalFilter,\n\tonGlobalFilterChange,\n\tonExport,\n}: DataTableToolbarProps<TData>) {\n\tconst [searchValue, setSearchValue] = React.useState(globalFilter);\n\n\tconst searchConfig =\n\t\ttypeof features.search === \"object\" ? features.search : {};\n\tconst exportFormats =\n\t\ttypeof features.export === \"object\"\n\t\t\t? features.export\n\t\t\t: [\"csv\", \"excel\"];\n\tconst hasFilters =\n\t\ttable.getState().columnFilters.length > 0 || globalFilter;\n\n\treturn (\n\t\t<div className=\"flex items-center justify-between\">\n\t\t\t<div className=\"flex flex-1 items-center space-x-2\">\n\t\t\t\t{features.search && (\n\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t<Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\tsearchConfig.placeholder || \"Search...\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetSearchValue(e.target.value);\n\t\t\t\t\t\t\t\tonGlobalFilterChange(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"h-9 w-[250px] pl-8\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{hasFilters && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttable.resetColumnFilters();\n\t\t\t\t\t\t\tsetSearchValue(\"\");\n\t\t\t\t\t\t\tonGlobalFilterChange(\"\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"h-9 px-2 lg:px-3\"\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t\t<X className=\"ml-2 h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t{features.columnVisibility && (\n\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tclassName=\"h-9 lg:flex\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Columns className=\"mr-2 h-4 w-4\" />\n\t\t\t\t\t\t\t\tView\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DropdownMenuTrigger>\n\t\t\t\t\t\t<DropdownMenuContent align=\"end\" className=\"w-[150px]\">\n\t\t\t\t\t\t\t<DropdownMenuLabel>\n\t\t\t\t\t\t\t\tToggle columns\n\t\t\t\t\t\t\t</DropdownMenuLabel>\n\t\t\t\t\t\t\t<DropdownMenuSeparator />\n\t\t\t\t\t\t\t{table\n\t\t\t\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(column) =>\n\t\t\t\t\t\t\t\t\t\ttypeof column.accessorFn !==\n\t\t\t\t\t\t\t\t\t\t\t\"undefined\" && column.getCanHide()\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((column) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<DropdownMenuCheckboxItem\n\t\t\t\t\t\t\t\t\t\t\tkey={column.id}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"capitalize\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={column.getIsVisible()}\n\t\t\t\t\t\t\t\t\t\t\tonCheckedChange={(value) =>\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn.toggleVisibility(!!value)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{column.id}\n\t\t\t\t\t\t\t\t\t\t</DropdownMenuCheckboxItem>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</DropdownMenuContent>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t)}\n\n\t\t\t\t{features.export && onExport && (\n\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t\t\t\t<Button variant=\"outline\" size=\"sm\" className=\"h-9\">\n\t\t\t\t\t\t\t\t<Download className=\"mr-2 h-4 w-4\" />\n\t\t\t\t\t\t\t\tExport\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DropdownMenuTrigger>\n\t\t\t\t\t\t<DropdownMenuContent align=\"end\">\n\t\t\t\t\t\t\t{exportFormats.includes(\"csv\") && (\n\t\t\t\t\t\t\t\t<DropdownMenuItem\n\t\t\t\t\t\t\t\t\tonClick={() => onExport(\"csv\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tExport as CSV\n\t\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{exportFormats.includes(\"excel\") && (\n\t\t\t\t\t\t\t\t<DropdownMenuItem\n\t\t\t\t\t\t\t\t\tonClick={() => onExport(\"excel\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tExport as Excel\n\t\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{exportFormats.includes(\"pdf\") && (\n\t\t\t\t\t\t\t\t<DropdownMenuItem\n\t\t\t\t\t\t\t\t\tonClick={() => onExport(\"pdf\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tExport as PDF\n\t\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</DropdownMenuContent>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t)}\n\n\t\t\t\t{features.refresh && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tclassName=\"h-9\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttypeof features.refresh === \"object\" &&\n\t\t\t\t\t\t\t\tfeatures.refresh.onRefresh\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tfeatures.refresh.onRefresh();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<RefreshCw className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n// src/components/data-table/components/DataTablePagination.tsx\n(\"use client\");\n\nimport {\n\tSelect,\n\tSelectContent,\n\tSelectItem,\n\tSelectTrigger,\n\tSelectValue,\n} from \"@/components/ui/select\";\nimport {\n\tChevronLeft,\n\tChevronRight,\n\tChevronsLeft,\n\tChevronsRight,\n} from \"lucide-react\";\n\ninterface DataTablePaginationProps<TData> {\n\ttable: Table<TData>;\n\tfeatures: TableFeatures;\n\tpageSizes?: number[];\n}\n\nexport function DataTablePagination<TData>({\n\ttable,\n\tfeatures,\n\tpageSizes = [10, 20, 30, 40, 50],\n}: DataTablePaginationProps<TData>) {\n\tconst showInfo =\n\t\ttypeof features.pagination === \"object\"\n\t\t\t? features.pagination.showInfo !== false\n\t\t\t: true;\n\n\treturn (\n\t\t<div className=\"flex items-center justify-between px-2\">\n\t\t\t{showInfo && (\n\t\t\t\t<div className=\"flex-1 text-sm text-muted-foreground\">\n\t\t\t\t\t{table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n\t\t\t\t\t{table.getFilteredRowModel().rows.length} row(s) selected.\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className=\"flex items-center space-x-6 lg:space-x-8\">\n\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t<p className=\"text-sm font-medium\">Rows per page</p>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={`${table.getState().pagination.pageSize}`}\n\t\t\t\t\t\tonValueChange={(value) => {\n\t\t\t\t\t\t\ttable.setPageSize(Number(value));\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SelectTrigger className=\"h-8 w-[70px]\">\n\t\t\t\t\t\t\t<SelectValue\n\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\ttable.getState().pagination.pageSize\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</SelectTrigger>\n\t\t\t\t\t\t<SelectContent side=\"top\">\n\t\t\t\t\t\t\t{pageSizes.map((pageSize) => (\n\t\t\t\t\t\t\t\t<SelectItem\n\t\t\t\t\t\t\t\t\tkey={pageSize}\n\t\t\t\t\t\t\t\t\tvalue={`${pageSize}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{pageSize}\n\t\t\t\t\t\t\t\t</SelectItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</SelectContent>\n\t\t\t\t\t</Select>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex w-[100px] items-center justify-center text-sm font-medium\">\n\t\t\t\t\tPage {table.getState().pagination.pageIndex + 1} of{\" \"}\n\t\t\t\t\t{table.getPageCount()}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"hidden h-8 w-8 p-0 lg:flex\"\n\t\t\t\t\t\tonClick={() => table.setPageIndex(0)}\n\t\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"sr-only\">Go to first page</span>\n\t\t\t\t\t\t<ChevronsLeft className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"h-8 w-8 p-0\"\n\t\t\t\t\t\tonClick={() => table.previousPage()}\n\t\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"sr-only\">Go to previous page</span>\n\t\t\t\t\t\t<ChevronLeft className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"h-8 w-8 p-0\"\n\t\t\t\t\t\tonClick={() => table.nextPage()}\n\t\t\t\t\t\tdisabled={!table.getCanNextPage()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"sr-only\">Go to next page</span>\n\t\t\t\t\t\t<ChevronRight className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"hidden h-8 w-8 p-0 lg:flex\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\ttable.setPageIndex(table.getPageCount() - 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdisabled={!table.getCanNextPage()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"sr-only\">Go to last page</span>\n\t\t\t\t\t\t<ChevronsRight className=\"h-4 w-4\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n// src/components/data-table/components/DataTableSkeleton.tsx\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n\tTableBody,\n\tTableCell,\n\tTableHead,\n\tTableHeader,\n\tTableRow,\n} from \"@/components/ui/table\";\n\ninterface DataTableSkeletonProps {\n\tcolumns: number;\n\trows: number;\n\tshowHeaders?: boolean;\n\tanimate?: boolean;\n}\n\nexport function DataTableSkeleton({\n\tcolumns,\n\trows,\n\tshowHeaders = true,\n\tanimate = true,\n}: DataTableSkeletonProps) {\n\treturn (\n\t\t<div className=\"rounded-md border\">\n\t\t\t<Table>\n\t\t\t\t{showHeaders && (\n\t\t\t\t\t<TableHeader>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t{Array.from({ length: columns }).map((_, i) => (\n\t\t\t\t\t\t\t\t<TableHead key={i}>\n\t\t\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\t\t\tclassName={`h-6 w-20 ${\n\t\t\t\t\t\t\t\t\t\t\tanimate ? \"animate-pulse\" : \"\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHeader>\n\t\t\t\t)}\n\t\t\t\t<TableBody>\n\t\t\t\t\t{Array.from({ length: rows }).map((_, i) => (\n\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t{Array.from({ length: columns }).map((_, j) => (\n\t\t\t\t\t\t\t\t<TableCell key={j}>\n\t\t\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\t\t\tclassName={`h-6 w-full ${\n\t\t\t\t\t\t\t\t\t\t\tanimate ? \"animate-pulse\" : \"\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</div>\n\t);\n}\n\n// src/components/data-table/components/DataTableEmpty.tsx\nimport { FileX2 } from \"lucide-react\";\n\ninterface DataTableEmptyProps {\n\tconfig?:\n\t\t| React.ReactNode\n\t\t| {\n\t\t\t\ticon?: any;\n\t\t\t\ttitle?: string;\n\t\t\t\tdescription?: string;\n\t\t\t\taction?: {\n\t\t\t\t\tlabel: string;\n\t\t\t\t\tonClick: () => void;\n\t\t\t\t};\n\t\t  };\n}\n\nexport function DataTableEmpty({ config }: DataTableEmptyProps) {\n\tif (React.isValidElement(config)) {\n\t\treturn <>{config}</>;\n\t}\n\n\tconst emptyConfig =\n\t\ttypeof config === \"object\" && config !== null ? config : {};\n\tconst Icon = emptyConfig.icon || FileX2;\n\n\treturn (\n\t\t<div className=\"flex flex-col items-center justify-center py-10\">\n\t\t\t<Icon className=\"h-10 w-10 text-muted-foreground mb-4\" />\n\t\t\t<h3 className=\"text-lg font-semibold\">\n\t\t\t\t{emptyConfig.title || \"No results found\"}\n\t\t\t</h3>\n\t\t\t<p className=\"text-sm text-muted-foreground mb-4\">\n\t\t\t\t{emptyConfig.description ||\n\t\t\t\t\t\"Try adjusting your search or filter to find what you're looking for.\"}\n\t\t\t</p>\n\t\t\t{emptyConfig.action && (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={emptyConfig.action.onClick}\n\t\t\t\t>\n\t\t\t\t\t{emptyConfig.action.label}\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","// src/components/data-table/hooks/useDataTable.ts\nimport {\n\tColumnDef,\n\tColumnFiltersState,\n\tgetCoreRowModel,\n\tgetFacetedRowModel,\n\tgetFacetedUniqueValues,\n\tgetFilteredRowModel,\n\tgetPaginationRowModel,\n\tgetSortedRowModel,\n\tPaginationState,\n\tRowSelectionState,\n\tSortingState,\n\tuseReactTable,\n\tVisibilityState,\n} from \"@tanstack/react-table\";\nimport * as React from \"react\";\nimport { DataTableProps, TableState, UseDataTableReturn } from \"../types\";\nimport { exportData } from \"../utils/exportUtils\";\n\ninterface UseDataTableProps<TData> {\n\tdata: TData[];\n\tcolumns: ColumnDef<TData, any>[];\n\tfeatures?: DataTableProps<TData, any>[\"features\"];\n\tmanualPagination?: boolean;\n\tmanualSorting?: boolean;\n\tmanualFiltering?: boolean;\n\tpageCount?: number;\n\trowCount?: number;\n\tonStateChange?: (state: TableState) => void;\n}\n\nexport function useDataTable<TData>({\n\tdata,\n\tcolumns,\n\tfeatures,\n\tmanualPagination = false,\n\tmanualSorting = false,\n\tmanualFiltering = false,\n\tpageCount: controlledPageCount,\n\trowCount: controlledRowCount,\n\tonStateChange,\n}: UseDataTableProps<TData>): UseDataTableReturn<TData> {\n\t// State\n\tconst [rowSelection, setRowSelection] = React.useState<RowSelectionState>(\n\t\t{}\n\t);\n\tconst [columnVisibility, setColumnVisibility] =\n\t\tReact.useState<VisibilityState>({});\n\tconst [columnFilters, setColumnFilters] =\n\t\tReact.useState<ColumnFiltersState>([]);\n\tconst [sorting, setSorting] = React.useState<SortingState>(\n\t\ttypeof features?.sort === \"object\"\n\t\t\t? features.sort.defaultSort || []\n\t\t\t: []\n\t);\n\tconst [globalFilter, setGlobalFilter] = React.useState(\"\");\n\tconst [pagination, setPagination] = React.useState<PaginationState>({\n\t\tpageIndex: 0,\n\t\tpageSize:\n\t\t\ttypeof features?.pagination === \"object\"\n\t\t\t\t? features.pagination.pageSize || 10\n\t\t\t\t: 10,\n\t});\n\n\t// Create debounced global filter\n\tconst debouncedGlobalFilter = React.useMemo(() => {\n\t\tconst debounce =\n\t\t\ttypeof features?.search === \"object\"\n\t\t\t\t? features.search.debounce || 300\n\t\t\t\t: 300;\n\n\t\tlet timeoutId: NodeJS.Timeout;\n\t\treturn (value: string) => {\n\t\t\tclearTimeout(timeoutId);\n\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\tsetGlobalFilter(value);\n\t\t\t}, debounce);\n\t\t};\n\t}, [features?.search]);\n\n\t// Create table instance\n\tconst table = useReactTable({\n\t\tdata,\n\t\tcolumns,\n\t\tpageCount: controlledPageCount,\n\t\tstate: {\n\t\t\tsorting,\n\t\t\tcolumnVisibility,\n\t\t\trowSelection,\n\t\t\tcolumnFilters,\n\t\t\tglobalFilter,\n\t\t\tpagination,\n\t\t},\n\t\tenableRowSelection: features?.selection !== false,\n\t\tenableMultiRowSelection:\n\t\t\ttypeof features?.selection === \"object\"\n\t\t\t\t? features.selection.multi !== false\n\t\t\t\t: true,\n\t\tonRowSelectionChange: setRowSelection,\n\t\tonSortingChange: setSorting,\n\t\tonColumnFiltersChange: setColumnFilters,\n\t\tonColumnVisibilityChange: setColumnVisibility,\n\t\tonGlobalFilterChange: setGlobalFilter,\n\t\tonPaginationChange: setPagination,\n\t\tgetCoreRowModel: getCoreRowModel(),\n\t\tgetFilteredRowModel: manualFiltering\n\t\t\t? undefined\n\t\t\t: getFilteredRowModel(),\n\t\tgetPaginationRowModel: manualPagination\n\t\t\t? undefined\n\t\t\t: getPaginationRowModel(),\n\t\tgetSortedRowModel: manualSorting ? undefined : getSortedRowModel(),\n\t\tgetFacetedRowModel: getFacetedRowModel(),\n\t\tgetFacetedUniqueValues: getFacetedUniqueValues(),\n\t\tmanualPagination,\n\t\tmanualSorting,\n\t\tmanualFiltering,\n\t});\n\n\t// Current state\n\tconst state: TableState = {\n\t\tpagination,\n\t\tsorting,\n\t\tfilters: columnFilters,\n\t\tcolumnVisibility,\n\t\trowSelection,\n\t\tglobalFilter,\n\t};\n\n\t// Notify state changes\n\tReact.useEffect(() => {\n\t\tonStateChange?.(state);\n\t}, [\n\t\tpagination,\n\t\tsorting,\n\t\tcolumnFilters,\n\t\tcolumnVisibility,\n\t\trowSelection,\n\t\tglobalFilter,\n\t]);\n\n\t// Computed values\n\tconst pageCount = table.getPageCount();\n\tconst rowCount =\n\t\tcontrolledRowCount ?? table.getFilteredRowModel().rows.length;\n\tconst selectedRows = table\n\t\t.getFilteredSelectedRowModel()\n\t\t.rows.map((row) => row.original);\n\n\t// Actions\n\tconst actions = React.useMemo(\n\t\t() => ({\n\t\t\tsetPage: (page: number) => {\n\t\t\t\tsetPagination((prev) => ({ ...prev, pageIndex: page }));\n\t\t\t},\n\t\t\tsetPageSize: (size: number) => {\n\t\t\t\tsetPagination((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\tpageSize: size,\n\t\t\t\t\tpageIndex: 0,\n\t\t\t\t}));\n\t\t\t},\n\t\t\tsetSort: (columnId: string, desc?: boolean) => {\n\t\t\t\tif (typeof features?.sort === \"object\" && features.sort.multi) {\n\t\t\t\t\tsetSorting((prev) => {\n\t\t\t\t\t\tconst existing = prev.find((s) => s.id === columnId);\n\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\treturn prev.map((s) =>\n\t\t\t\t\t\t\t\ts.id === columnId\n\t\t\t\t\t\t\t\t\t? { ...s, desc: desc ?? !s.desc }\n\t\t\t\t\t\t\t\t\t: s\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [...prev, { id: columnId, desc: desc ?? false }];\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsetSorting([{ id: columnId, desc: desc ?? false }]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetFilter: (columnId: string, value: any) => {\n\t\t\t\tsetColumnFilters((prev) => {\n\t\t\t\t\tconst existing = prev.find((f) => f.id === columnId);\n\t\t\t\t\tif (value === undefined || value === null || value === \"\") {\n\t\t\t\t\t\treturn prev.filter((f) => f.id !== columnId);\n\t\t\t\t\t}\n\t\t\t\t\tif (existing) {\n\t\t\t\t\t\treturn prev.map((f) =>\n\t\t\t\t\t\t\tf.id === columnId ? { ...f, value } : f\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn [...prev, { id: columnId, value }];\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetGlobalFilter: (value: string) => {\n\t\t\t\tif (\n\t\t\t\t\ttypeof features?.search === \"object\" &&\n\t\t\t\t\tfeatures.search.debounce\n\t\t\t\t) {\n\t\t\t\t\tdebouncedGlobalFilter(value);\n\t\t\t\t} else {\n\t\t\t\t\tsetGlobalFilter(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\ttoggleColumnVisibility: (columnId: string) => {\n\t\t\t\tsetColumnVisibility((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\t[columnId]: !prev[columnId],\n\t\t\t\t}));\n\t\t\t},\n\t\t\tselectRow: (rowId: string, selected?: boolean) => {\n\t\t\t\tsetRowSelection((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\t[rowId]: selected ?? !prev[rowId],\n\t\t\t\t}));\n\t\t\t},\n\t\t\tselectAllRows: (selected?: boolean) => {\n\t\t\t\tif (selected === undefined) {\n\t\t\t\t\ttable.toggleAllRowsSelected();\n\t\t\t\t} else {\n\t\t\t\t\ttable.toggleAllRowsSelected(selected);\n\t\t\t\t}\n\t\t\t},\n\t\t\tresetFilters: () => {\n\t\t\t\tsetColumnFilters([]);\n\t\t\t\tsetGlobalFilter(\"\");\n\t\t\t},\n\t\t\tresetSort: () => {\n\t\t\t\tsetSorting([]);\n\t\t\t},\n\t\t\tresetSelection: () => {\n\t\t\t\tsetRowSelection({});\n\t\t\t},\n\t\t\tresetAll: () => {\n\t\t\t\tsetColumnFilters([]);\n\t\t\t\tsetGlobalFilter(\"\");\n\t\t\t\tsetSorting([]);\n\t\t\t\tsetRowSelection({});\n\t\t\t\tsetPagination({ pageIndex: 0, pageSize: pagination.pageSize });\n\t\t\t},\n\t\t\trefresh: () => {\n\t\t\t\t// This would typically trigger a data refetch\n\t\t\t\t// Implementation depends on data source\n\t\t\t},\n\t\t}),\n\t\t[features, pagination.pageSize, debouncedGlobalFilter]\n\t);\n\n\t// Export functionality\n\tconst exportTableData = React.useCallback(\n\t\t(format: \"csv\" | \"excel\" | \"pdf\") => {\n\t\t\tconst dataToExport = table\n\t\t\t\t.getFilteredRowModel()\n\t\t\t\t.rows.map((row) => row.original);\n\t\t\texportData(format, dataToExport, columns, \"table-export\");\n\t\t},\n\t\t[table, columns]\n\t);\n\n\treturn {\n\t\tdata: table.getRowModel().rows.map((row) => row.original),\n\t\tloading: false,\n\t\terror: null,\n\t\tstate,\n\t\tpageCount,\n\t\trowCount,\n\t\tselectedRows,\n\t\tactions,\n\t\texportData: exportTableData,\n\t\ttable,\n\t};\n}\n","// src/components/data-table/utils/exportUtils.ts\nimport { ColumnDef } from \"@tanstack/react-table\";\n\n// Helper to get the accessor key from a column\nfunction getAccessorKey<TData>(column: ColumnDef<TData, any>): string | null {\n\tif (\"accessorKey\" in column && column.accessorKey) {\n\t\treturn column.accessorKey as string;\n\t}\n\tif (\"id\" in column && column.id) {\n\t\treturn column.id;\n\t}\n\treturn null;\n}\n\n// Helper to get column header text\nfunction getColumnHeader<TData>(column: ColumnDef<TData, any>): string {\n\tif (typeof column.header === \"string\") {\n\t\treturn column.header;\n\t}\n\tif (\"id\" in column && column.id) {\n\t\treturn column.id;\n\t}\n\tif (\"accessorKey\" in column && column.accessorKey) {\n\t\treturn String(column.accessorKey);\n\t}\n\treturn \"Column\";\n}\n\n// CSV Export\nexport function exportToCSV<TData>(\n\tdata: TData[],\n\tcolumns: ColumnDef<TData, any>[],\n\tfilename: string = \"data\"\n) {\n\t// Get visible columns only\n\tconst visibleColumns = columns.filter(\n\t\t(col) =>\n\t\t\tcol.id !== \"select\" &&\n\t\t\tcol.id !== \"actions\" &&\n\t\t\tcol.enableHiding !== false\n\t);\n\n\t// Create headers\n\tconst headers = visibleColumns.map((col) => getColumnHeader(col)).join(\",\");\n\n\t// Create rows\n\tconst rows = data\n\t\t.map((row) => {\n\t\t\treturn visibleColumns\n\t\t\t\t.map((col) => {\n\t\t\t\t\tconst accessorKey = getAccessorKey(col);\n\t\t\t\t\tconst value = accessorKey ? (row as any)[accessorKey] : \"\";\n\t\t\t\t\t// Escape commas and quotes\n\t\t\t\t\tconst escaped = String(value).replace(/\"/g, '\"\"');\n\t\t\t\t\treturn escaped.includes(\",\") ? `\"${escaped}\"` : escaped;\n\t\t\t\t})\n\t\t\t\t.join(\",\");\n\t\t})\n\t\t.join(\"\\n\");\n\n\t// Create blob and download\n\tconst csv = `${headers}\\n${rows}`;\n\tconst blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n\tconst link = document.createElement(\"a\");\n\tlink.href = URL.createObjectURL(blob);\n\tlink.download = `${filename}.csv`;\n\tlink.click();\n}\n\n// Excel Export (using basic CSV format that Excel can open)\nexport function exportToExcel<TData>(\n\tdata: TData[],\n\tcolumns: ColumnDef<TData, any>[],\n\tfilename: string = \"data\"\n) {\n\t// For a real implementation, you would use a library like SheetJS\n\t// For now, we'll create a CSV that Excel can open\n\texportToCSV(data, columns, filename);\n}\n\n// PDF Export (basic implementation)\nexport function exportToPDF<TData>(\n\tdata: TData[],\n\tcolumns: ColumnDef<TData, any>[],\n\tfilename: string = \"data\"\n) {\n\t// For a real implementation, you would use a library like jsPDF\n\t// For now, we'll create a simple HTML table and print it\n\tconst visibleColumns = columns.filter(\n\t\t(col) =>\n\t\t\tcol.id !== \"select\" &&\n\t\t\tcol.id !== \"actions\" &&\n\t\t\tcol.enableHiding !== false\n\t);\n\n\tconst html = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>${filename}</title>\n      <style>\n        body { font-family: Arial, sans-serif; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; font-weight: bold; }\n        tr:nth-child(even) { background-color: #f9f9f9; }\n        @media print {\n          body { margin: 0; }\n          table { page-break-inside: auto; }\n          tr { page-break-inside: avoid; page-break-after: auto; }\n        }\n      </style>\n    </head>\n    <body>\n      <h1>${filename}</h1>\n      <table>\n        <thead>\n          <tr>\n            ${visibleColumns\n\t\t\t\t.map((col) => {\n\t\t\t\t\tconst header = getColumnHeader(col);\n\t\t\t\t\treturn `<th>${header}</th>`;\n\t\t\t\t})\n\t\t\t\t.join(\"\")}\n          </tr>\n        </thead>\n        <tbody>\n          ${data\n\t\t\t\t.map(\n\t\t\t\t\t(row) => `\n            <tr>\n              ${visibleColumns\n\t\t\t\t\t.map((col) => {\n\t\t\t\t\t\tconst accessorKey = getAccessorKey(col);\n\t\t\t\t\t\tconst value = accessorKey\n\t\t\t\t\t\t\t? (row as any)[accessorKey]\n\t\t\t\t\t\t\t: \"\";\n\t\t\t\t\t\treturn `<td>${value || \"\"}</td>`;\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\")}\n            </tr>\n          `\n\t\t\t\t)\n\t\t\t\t.join(\"\")}\n        </tbody>\n      </table>\n    </body>\n    </html>\n  `;\n\n\tconst printWindow = window.open(\"\", \"_blank\");\n\tif (printWindow) {\n\t\tprintWindow.document.write(html);\n\t\tprintWindow.document.close();\n\t\tprintWindow.print();\n\t}\n}\n\n// Main export function\nexport function exportData<TData>(\n\tformat: \"csv\" | \"excel\" | \"pdf\",\n\tdata: TData[],\n\tcolumns: ColumnDef<TData, any>[],\n\tfilename: string = \"table-export\"\n) {\n\tconst timestamp = new Date().toISOString().split(\"T\")[0];\n\tconst fullFilename = `${filename}-${timestamp}`;\n\n\tswitch (format) {\n\t\tcase \"csv\":\n\t\t\texportToCSV(data, columns, fullFilename);\n\t\t\tbreak;\n\t\tcase \"excel\":\n\t\t\texportToExcel(data, columns, fullFilename);\n\t\t\tbreak;\n\t\tcase \"pdf\":\n\t\t\texportToPDF(data, columns, fullFilename);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.error(`Unsupported export format: ${format}`);\n\t}\n}\n","// src/components/ui/badge.tsx\nimport { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst badgeVariants = cva(\n\t\"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault:\n\t\t\t\t\t\"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n\t\t\t\tsecondary:\n\t\t\t\t\t\"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n\t\t\t\tdestructive:\n\t\t\t\t\t\"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n\t\t\t\toutline: \"text-foreground\",\n\t\t\t\tsuccess:\n\t\t\t\t\t\"border-transparent bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100\",\n\t\t\t\twarning:\n\t\t\t\t\t\"border-transparent bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-100\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t},\n\t}\n);\n\nexport interface BadgeProps\n\textends React.HTMLAttributes<HTMLDivElement>,\n\t\tVariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n\treturn (\n\t\t<div className={cn(badgeVariants({ variant }), className)} {...props} />\n\t);\n}\n\nexport { Badge, badgeVariants };\n","// src/components/ui/checkbox.tsx\n\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport * as React from \"react\";\n\nconst Checkbox = React.forwardRef<\n\tReact.ElementRef<typeof CheckboxPrimitive.Root>,\n\tReact.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n\t<CheckboxPrimitive.Root\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<CheckboxPrimitive.Indicator\n\t\t\tclassName={cn(\"flex items-center justify-center text-current\")}\n\t\t>\n\t\t\t<CheckIcon className=\"h-4 w-4\" />\n\t\t</CheckboxPrimitive.Indicator>\n\t</CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","// src/components/data-table/utils/columnHelpers.ts\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n\tDropdownMenu,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuLabel,\n\tDropdownMenuSeparator,\n\tDropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { ArrowUpDown, MoreHorizontal } from \"lucide-react\";\nimport { ColumnAction, ColumnConfig } from \"../types\";\n\n// Format functions\nconst formatters = {\n\ttext: (value: any) => String(value || \"\"),\n\tnumber: (value: any) => {\n\t\tconst num = parseFloat(value);\n\t\treturn isNaN(num) ? \"\" : num.toLocaleString();\n\t},\n\tcurrency: (value: any, currency = \"USD\") => {\n\t\tconst num = parseFloat(value);\n\t\treturn isNaN(num)\n\t\t\t? \"\"\n\t\t\t: new Intl.NumberFormat(\"en-US\", {\n\t\t\t\t\tstyle: \"currency\",\n\t\t\t\t\tcurrency,\n\t\t\t  }).format(num);\n\t},\n\tdate: (value: any) => {\n\t\tconst date = new Date(value);\n\t\treturn isNaN(date.getTime()) ? \"\" : date.toLocaleDateString();\n\t},\n\tdatetime: (value: any) => {\n\t\tconst date = new Date(value);\n\t\treturn isNaN(date.getTime()) ? \"\" : date.toLocaleString();\n\t},\n\tboolean: (value: any) => {\n\t\treturn value ? \"Yes\" : \"No\";\n\t},\n};\n\n// Main column creation function\nexport function createColumns<TData>(\n\tconfigs: ColumnConfig<TData>[]\n): ColumnDef<TData, any>[] {\n\treturn configs.map((config) => {\n\t\tconst column: ColumnDef<TData, any> = {\n\t\t\tid: String(config.key),\n\t\t\taccessorKey: config.key as string,\n\t\t\theader:\n\t\t\t\tconfig.sortable !== false\n\t\t\t\t\t? ({ column }) => (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tcolumn.toggleSorting(\n\t\t\t\t\t\t\t\t\t\tcolumn.getIsSorted() === \"asc\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName=\"-ml-3 h-8 text-left justify-start\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{config.header}\n\t\t\t\t\t\t\t\t{config.sortable && (\n\t\t\t\t\t\t\t\t\t<ArrowUpDown className=\"ml-2 h-4 w-4\" />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t  )\n\t\t\t\t\t: config.header,\n\t\t\tcell: ({ row, getValue }) => {\n\t\t\t\tconst value = getValue();\n\n\t\t\t\t// Custom cell renderer\n\t\t\t\tif (config.cell) {\n\t\t\t\t\treturn config.cell(value, row.original);\n\t\t\t\t}\n\n\t\t\t\t// Format based on type\n\t\t\t\tif (config.format && config.format in formatters) {\n\t\t\t\t\treturn formatters[config.format](value);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\tenableSorting: config.sortable !== false,\n\t\t\tenableHiding: config.enableHiding !== false,\n\t\t};\n\n\t\t// Add alignment\n\t\tif (config.align) {\n\t\t\tcolumn.meta = { align: config.align };\n\t\t}\n\n\t\t// Add width\n\t\tif (config.width) {\n\t\t\tcolumn.size =\n\t\t\t\ttypeof config.width === \"number\" ? config.width : undefined;\n\t\t\tcolumn.meta = { ...column.meta, width: config.width };\n\t\t}\n\n\t\treturn column;\n\t});\n}\n\n// Preset column creators\nexport const columnHelpers = {\n\t// Selection column\n\tselect: <TData,>(): ColumnDef<TData, any> => ({\n\t\tid: \"select\",\n\t\theader: ({ table }) => (\n\t\t\t<Checkbox\n\t\t\t\tchecked={\n\t\t\t\t\ttable.getIsAllPageRowsSelected() ||\n\t\t\t\t\t(table.getIsSomePageRowsSelected() && \"indeterminate\")\n\t\t\t\t}\n\t\t\t\tonCheckedChange={(value) =>\n\t\t\t\t\ttable.toggleAllPageRowsSelected(!!value)\n\t\t\t\t}\n\t\t\t\taria-label=\"Select all\"\n\t\t\t/>\n\t\t),\n\t\tcell: ({ row }) => (\n\t\t\t<Checkbox\n\t\t\t\tchecked={row.getIsSelected()}\n\t\t\t\tonCheckedChange={(value) => row.toggleSelected(!!value)}\n\t\t\t\taria-label=\"Select row\"\n\t\t\t/>\n\t\t),\n\t\tenableSorting: false,\n\t\tenableHiding: false,\n\t\tsize: 40,\n\t}),\n\n\t// Text column\n\ttext: <TData,>(\n\t\tkey: keyof TData,\n\t\toptions: Partial<ColumnConfig<TData>> = {}\n\t): ColumnDef<TData, any> => ({\n\t\taccessorKey: key as string,\n\t\theader: options.header || String(key),\n\t\tenableSorting: options.sortable !== false,\n\t\tenableHiding: options.enableHiding !== false,\n\t\tcell: options.cell\n\t\t\t? ({ row, getValue }) => options.cell!(getValue(), row.original)\n\t\t\t: ({ getValue }) => getValue(),\n\t}),\n\n\t// Number column\n\tnumber: <TData,>(\n\t\tkey: keyof TData,\n\t\toptions: Partial<ColumnConfig<TData>> = {}\n\t): ColumnDef<TData, any> => ({\n\t\taccessorKey: key as string,\n\t\theader: ({ column }) => (\n\t\t\t<Button\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tonClick={() =>\n\t\t\t\t\tcolumn.toggleSorting(column.getIsSorted() === \"asc\")\n\t\t\t\t}\n\t\t\t\tclassName=\"-ml-3 h-8 text-left justify-start\"\n\t\t\t>\n\t\t\t\t{options.header || String(key)}\n\t\t\t\t<ArrowUpDown className=\"ml-2 h-4 w-4\" />\n\t\t\t</Button>\n\t\t),\n\t\tcell: ({ getValue }) => {\n\t\t\tconst value = getValue() as number;\n\t\t\treturn formatters.number(value);\n\t\t},\n\t\tmeta: { align: \"right\" },\n\t}),\n\n\t// Currency column\n\tcurrency: <TData,>(\n\t\tkey: keyof TData,\n\t\toptions: Partial<ColumnConfig<TData>> & { currency?: string } = {}\n\t): ColumnDef<TData, any> => ({\n\t\taccessorKey: key as string,\n\t\theader: ({ column }) => (\n\t\t\t<Button\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tonClick={() =>\n\t\t\t\t\tcolumn.toggleSorting(column.getIsSorted() === \"asc\")\n\t\t\t\t}\n\t\t\t\tclassName=\"-ml-3 h-8 text-left justify-start\"\n\t\t\t>\n\t\t\t\t{options.header || String(key)}\n\t\t\t\t<ArrowUpDown className=\"ml-2 h-4 w-4\" />\n\t\t\t</Button>\n\t\t),\n\t\tcell: ({ getValue }) => {\n\t\t\tconst value = getValue() as number;\n\t\t\treturn formatters.currency(value, options.currency);\n\t\t},\n\t\tmeta: { align: \"right\" },\n\t}),\n\n\t// Date column\n\tdate: <TData,>(\n\t\tkey: keyof TData,\n\t\toptions: Partial<ColumnConfig<TData>> = {}\n\t): ColumnDef<TData, any> => ({\n\t\taccessorKey: key as string,\n\t\theader: ({ column }) => (\n\t\t\t<Button\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tonClick={() =>\n\t\t\t\t\tcolumn.toggleSorting(column.getIsSorted() === \"asc\")\n\t\t\t\t}\n\t\t\t\tclassName=\"-ml-3 h-8 text-left justify-start\"\n\t\t\t>\n\t\t\t\t{options.header || String(key)}\n\t\t\t\t<ArrowUpDown className=\"ml-2 h-4 w-4\" />\n\t\t\t</Button>\n\t\t),\n\t\tcell: ({ getValue }) => {\n\t\t\tconst value = getValue();\n\t\t\treturn formatters.date(value);\n\t\t},\n\t}),\n\n\t// Status/Badge column\n\tstatus: <TData,>(\n\t\tkey: keyof TData,\n\t\toptions: Partial<ColumnConfig<TData>> & {\n\t\t\tvariants?: Record<\n\t\t\t\tstring,\n\t\t\t\t| \"default\"\n\t\t\t\t| \"secondary\"\n\t\t\t\t| \"destructive\"\n\t\t\t\t| \"outline\"\n\t\t\t\t| \"success\"\n\t\t\t\t| \"warning\"\n\t\t\t>;\n\t\t} = {}\n\t): ColumnDef<TData, any> => ({\n\t\taccessorKey: key as string,\n\t\theader: options.header || String(key),\n\t\tcell: ({ getValue }) => {\n\t\t\tconst value = String(getValue());\n\t\t\tconst variant = (options.variants?.[value] || \"default\") as\n\t\t\t\t| \"default\"\n\t\t\t\t| \"secondary\"\n\t\t\t\t| \"destructive\"\n\t\t\t\t| \"outline\"\n\t\t\t\t| \"success\"\n\t\t\t\t| \"warning\";\n\t\t\treturn <Badge variant={variant}>{value}</Badge>;\n\t\t},\n\t}),\n\n\t// Actions column\n\tactions: <TData,>(\n\t\tactions: ColumnAction<TData>[],\n\t\toptions: { header?: string } = {}\n\t): ColumnDef<TData, any> => ({\n\t\tid: \"actions\",\n\t\theader: options.header || \"\",\n\t\tcell: ({ row }) => {\n\t\t\tconst visibleActions = actions.filter(\n\t\t\t\t(action) => !action.show || action.show(row.original)\n\t\t\t);\n\n\t\t\tif (visibleActions.length === 0) return null;\n\n\t\t\treturn (\n\t\t\t\t<DropdownMenu>\n\t\t\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\n\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DropdownMenuTrigger>\n\t\t\t\t\t<DropdownMenuContent align=\"end\">\n\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\n\t\t\t\t\t\t<DropdownMenuSeparator />\n\t\t\t\t\t\t{visibleActions.map((action, index) => (\n\t\t\t\t\t\t\t<DropdownMenuItem\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonClick={() => action.onClick(row.original)}\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\taction.variant === \"destructive\"\n\t\t\t\t\t\t\t\t\t\t? \"text-red-600\"\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{action.icon && (\n\t\t\t\t\t\t\t\t\t<action.icon className=\"mr-2 h-4 w-4\" />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{action.label}\n\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</DropdownMenuContent>\n\t\t\t\t</DropdownMenu>\n\t\t\t);\n\t\t},\n\t\tenableSorting: false,\n\t\tenableHiding: false,\n\t\tsize: 40,\n\t}),\n\n\t// Custom column\n\tcustom: <TData,>(\n\t\tid: string,\n\t\trenderer: (row: TData) => React.ReactNode,\n\t\toptions: { header?: string; size?: number } = {}\n\t): ColumnDef<TData, any> => ({\n\t\tid,\n\t\theader: options.header || \"\",\n\t\tcell: ({ row }) => renderer(row.original),\n\t\tenableSorting: false,\n\t\tsize: options.size,\n\t}),\n};\n\n// Helper to merge column definitions\nexport function mergeColumns<TData>(\n\t...columnSets: ColumnDef<TData, any>[][]\n): ColumnDef<TData, any>[] {\n\treturn columnSets.flat();\n}\n","// src/components/data-table/utils/presets.ts\nimport { TableFeatures, TablePreset } from \"../types\";\n\nexport const tablePresets: Record<TablePreset, TableFeatures> = {\n\tsimple: {\n\t\tsort: true,\n\t\tpagination: {\n\t\t\tpageSize: 10,\n\t\t\tpageSizes: [10, 25, 50],\n\t\t\tshowInfo: true,\n\t\t},\n\t},\n\n\tadvanced: {\n\t\tsearch: {\n\t\t\tplaceholder: \"Search...\",\n\t\t\tdebounce: 300,\n\t\t},\n\t\tsort: {\n\t\t\tmulti: true,\n\t\t},\n\t\tpagination: {\n\t\t\tpageSize: 20,\n\t\t\tpageSizes: [10, 20, 50, 100],\n\t\t\tshowInfo: true,\n\t\t},\n\t\tselection: {\n\t\t\tmulti: true,\n\t\t\tshowSelectAll: true,\n\t\t},\n\t\tcolumnVisibility: true,\n\t\tfilters: {\n\t\t\tinline: true,\n\t\t\tadvanced: false,\n\t\t},\n\t\texport: [\"csv\", \"excel\"],\n\t\tdensity: true,\n\t\trefresh: false,\n\t},\n\n\t\"server-side\": {\n\t\tsearch: {\n\t\t\tplaceholder: \"Search...\",\n\t\t\tdebounce: 500,\n\t\t},\n\t\tsort: {\n\t\t\tmulti: false,\n\t\t},\n\t\tpagination: {\n\t\t\tpageSize: 25,\n\t\t\tpageSizes: [25, 50, 100],\n\t\t\tshowInfo: true,\n\t\t},\n\t\tselection: false,\n\t\tcolumnVisibility: true,\n\t\tfilters: {\n\t\t\tinline: true,\n\t\t\tadvanced: true,\n\t\t},\n\t\texport: false,\n\t\tdensity: false,\n\t\trefresh: true,\n\t},\n};\n\n// Merge preset with custom features\nexport function mergeFeatures(\n\tpreset: TablePreset | undefined,\n\tcustomFeatures: TableFeatures | undefined\n): TableFeatures {\n\tconst baseFeatures = preset ? tablePresets[preset] : {};\n\n\tif (!customFeatures) return baseFeatures;\n\n\t// Deep merge features\n\tconst merged: TableFeatures = { ...baseFeatures };\n\n\tObject.keys(customFeatures).forEach((key) => {\n\t\tconst featureKey = key as keyof TableFeatures;\n\t\tconst customValue = customFeatures[featureKey];\n\t\tconst baseValue = baseFeatures[featureKey];\n\n\t\tif (typeof customValue === \"boolean\") {\n\t\t\tmerged[featureKey] = customValue as any;\n\t\t} else if (\n\t\t\ttypeof customValue === \"object\" &&\n\t\t\ttypeof baseValue === \"object\"\n\t\t) {\n\t\t\tmerged[featureKey] = { ...baseValue, ...customValue } as any;\n\t\t} else {\n\t\t\tmerged[featureKey] = customValue as any;\n\t\t}\n\t});\n\n\treturn merged;\n}\n"],"mappings":"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","names":["cva","jsx","jsx","jsx","flexRender","React","React","jsx","Icon","jsx","jsx","React","jsx","jsxs","React","jsx","jsxs","jsxs","jsx","ChevronRight","Fragment","jsx","jsxs","jsx","jsx","jsxs","_","CheckIcon","jsx","jsxs","jsx","jsx","jsxs","CheckIcon","jsx","React","jsx","Table","React","ChevronLeft","ChevronRight","ChevronsLeft","ChevronsRight","FileX2","Fragment","jsx","jsxs","React","cva","jsx","CheckIcon","React","jsx","jsx","jsxs","column","Fragment","jsx","jsxs","flexRender"]}